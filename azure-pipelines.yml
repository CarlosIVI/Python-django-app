name: $(Major)-$(Minor)-$(Patch)-$(Rev:r)

trigger:
- main

pool: Default


variables:
- name: Application
  value: 'cool_counters'

- name: Major
  value: '0'

- name: Minor
  value: '0'

- name: Patch
  value: '0'

- group: AWS-ECR-Variables


stages:
- stage: CI
  jobs:
  - job:
    steps:
    - bash: |
        docker build -t $(AWS_ECR_REPOSITORY):$(Build.BuildNumber) $(Build.SourcesDirectory)/$(Application)
      displayName: 'Build docker image'

    - task: ECRPushImage@1
      displayName: Push image to AWS ECR
      inputs:
         awsCredentials: $(AWS_CREDENTIALS)
         regionName: $(AWS_REGION)
         imageSource: 'imagename'
         sourceImageName: $(AWS_ECR_REPOSITORY)
         sourceImageTag: $(Build.BuildNumber)
         pushTag: $(Build.BuildNumber)
         repositoryName: $(AWS_ECR_REPOSITORY)
         logRequest: true
         logResponse:
         
- stage: CD
  pool: Default
  jobs:
  - deployment:
    environment: dev
    displayName: Deployment
    strategy:
      runOnce:
        deploy:
          steps:
          - task: replacetokens@4
            displayName: Replace tokens in values.yaml
            inputs:
               rootDirectory: '$(Build.SourcesDirectory)/deploy_resources/k8s-deployment-app'
               targetFiles: 'values.yaml'
               tokenPattern: custom
               actionOnNoFiles: fail
               tokenPrefix: '__'
               tokenSuffix: '__'

          - task: replacetokens@4
            displayName: Replace tokens in Chart.yaml
            inputs:
               rootDirectory: '$(Build.SourcesDirectory)/deploy_resources/k8s-deployment-app'
               targetFiles: 'Chart.yaml'
               tokenPattern: custom
               actionOnNoFiles: fail
               tokenPrefix: '__'
               tokenSuffix: '__'

          - task: HelmDeploy@0
            displayName: Package Helm Chart for $(Application)
            inputs:
             command: 'package'
             chartPath: '$(Build.SourcesDirectory)/deploy_resources/k8s-deployment-app'


          - task: HelmDeploy@0
            continueOnError: true
            displayName: Deploy to cluster
            inputs:
               namespace: 'python-app'
               command: 'upgrade'
               connectionType: Kubernetes Service Connection
               kubernetesCluster: 'devops-catalog'
               KubernetesServiceEndpoint: 'dev-python-app-1644697063739'
               releaseName: $(Application)
               chartType: filepath
               chartPath: '$(Build.StagingDirectory)/k8s-deployment-app-$(Build.BuildNumber).tgz'
